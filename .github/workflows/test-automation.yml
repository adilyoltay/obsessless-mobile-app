name: 🤖 ObsessLess Test Automation

on:
  push:
    branches: [main, develop, 'feature/**']
  pull_request:
    branches: [main, develop]
  schedule:
    # Her gün saat 02:00'de çalıştır (UTC)
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - unit
          - integration
          - e2e

env:
  NODE_VERSION: '18.x'
  EXPO_VERSION: '~53.0.0'

jobs:
  # 🧪 Unit Tests
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    if: github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'unit' || github.event_name != 'workflow_dispatch'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          
      - name: 📦 Install dependencies
        run: |
          yarn install --frozen-lockfile
          
      - name: 🔍 Type checking
        run: yarn typecheck
        
      - name: 🧪 Run unit tests
        run: yarn test:unit
        
      - name: 📊 Generate coverage report
        run: yarn test:coverage
        
      - name: 📤 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: unit
          name: unit-coverage
          
      - name: 💾 Save test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-results
          path: |
            coverage/
            test-reports/
            
  # 🔗 Integration Tests
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'integration' || github.event_name != 'workflow_dispatch'
    needs: unit-tests
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          
      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: 🗄️ Setup test database
        run: |
          # Supabase local setup for testing
          npx supabase init
          npx supabase start
          
      - name: 🧪 Run integration tests
        run: yarn test:integration
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_TEST_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_TEST_ANON_KEY }}
          
      - name: 💾 Save test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-results
          path: test-reports/
          
  # 📱 E2E Tests - iOS
  e2e-ios:
    name: E2E Tests (iOS)
    runs-on: macos-latest
    if: github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'e2e'
    needs: integration-tests
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          
      - name: 📦 Install dependencies
        run: |
          yarn install --frozen-lockfile
          brew tap wix/brew
          brew install applesimutils
          
      - name: 📱 Setup iOS Simulator
        run: |
          xcrun simctl list devices
          xcrun simctl boot "iPhone 14" || true
          
      - name: 🏗️ Build iOS app for testing
        run: |
          npx expo prebuild --platform ios
          yarn detox build --configuration ios.sim.debug
          
      - name: 🧪 Run E2E tests
        run: yarn detox test --configuration ios.sim.debug --cleanup
        
      - name: 📸 Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-ios-screenshots
          path: artifacts/
          
  # 📱 E2E Tests - Android
  e2e-android:
    name: E2E Tests (Android)
    runs-on: ubuntu-latest
    if: github.event.inputs.test_suite == 'all' || github.event.inputs.test_suite == 'e2e'
    needs: integration-tests
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          
      - name: ☕ Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: 🤖 Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: 📱 Start Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          arch: x86_64
          profile: Nexus 6
          script: |
            yarn detox build --configuration android.emu.debug
            yarn detox test --configuration android.emu.debug --cleanup
            
      - name: 📸 Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: e2e-android-screenshots
          path: artifacts/
          
  # 📊 Test Report & Quality Gate
  quality-gate:
    name: Quality Gate & Reporting
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: always()
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📥 Download all test results
        uses: actions/download-artifact@v3
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: 📊 Generate consolidated report
        run: |
          node scripts/consolidate-test-reports.js
          
      - name: 🚦 Check quality gates
        run: |
          # Coverage threshold check
          COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
          if (( $(echo "$COVERAGE < 70" | bc -l) )); then
            echo "❌ Coverage is below 70%: $COVERAGE%"
            exit 1
          fi
          echo "✅ Coverage is acceptable: $COVERAGE%"
          
      - name: 💬 Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('test-reports/summary.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
            
      - name: 📤 Upload final report
        uses: actions/upload-artifact@v3
        with:
          name: test-automation-report
          path: |
            test-reports/
            coverage/
            
  # 🚀 Performance Tests
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event.inputs.test_suite == 'all'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          
      - name: 📦 Install dependencies
        run: yarn install --frozen-lockfile
        
      - name: 🏃 Run performance tests
        run: |
          # UnifiedAIPipeline performance tests
          node scripts/performance-tests.js
          
      - name: 📊 Analyze results
        run: |
          node scripts/analyze-performance.js
          
      - name: 💾 Save performance metrics
        uses: actions/upload-artifact@v3
        with:
          name: performance-metrics
          path: performance-reports/
          
  # 🔒 Security Scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔍 Run security audit
        run: |
          yarn audit --level moderate
          npx snyk test
          
      - name: 🔐 Secret scanning
        run: yarn scan:secrets
        
      - name: 📝 Generate security report
        if: always()
        run: |
          echo "# Security Scan Report" > security-report.md
          echo "Date: $(date)" >> security-report.md
          yarn audit --json | jq '.advisories' >> security-report.md
          
      - name: 💾 Save security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md

# 📢 Notifications
  notify:
    name: Send Notifications
    runs-on: ubuntu-latest
    needs: [quality-gate]
    if: always()
    
    steps:
      - name: 📊 Determine status
        id: status
        run: |
          if [[ "${{ needs.quality-gate.result }}" == "success" ]]; then
            echo "status=✅ Success" >> $GITHUB_OUTPUT
            echo "color=good" >> $GITHUB_OUTPUT
          else
            echo "status=❌ Failed" >> $GITHUB_OUTPUT
            echo "color=danger" >> $GITHUB_OUTPUT
          fi
          
      - name: 📤 Send Slack notification
        if: github.event_name != 'pull_request'
        uses: slackapi/slack-github-action@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          payload: |
            {
              "text": "ObsessLess Test Automation ${{ steps.status.outputs.status }}",
              "attachments": [{
                "color": "${{ steps.status.outputs.color }}",
                "fields": [
                  {
                    "title": "Branch",
                    "value": "${{ github.ref_name }}",
                    "short": true
                  },
                  {
                    "title": "Commit",
                    "value": "${{ github.sha }}",
                    "short": true
                  },
                  {
                    "title": "Triggered by",
                    "value": "${{ github.actor }}",
                    "short": true
                  },
                  {
                    "title": "Workflow",
                    "value": "${{ github.workflow }}",
                    "short": true
                  }
                ]
              }]
            }